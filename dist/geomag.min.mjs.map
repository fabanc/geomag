{"version":3,"file":"geomag.min.mjs","sources":["../src/geomag.ts","../src/constants.ts","../src/util.ts"],"sourcesContent":["import { globe, gnmWmm2025, gtnmWmm2025, hnmWmm2025, htnmWmm2025 } from './constants';\nimport { Field } from './types';\nimport { deg2rad, julianYearsSince2025, normalizeInclination, rad2deg, round, zeroArray2D } from './util';\n\nconst P = zeroArray2D(13, 13);\nconst DP = zeroArray2D(13, 13);\nconst gnm = zeroArray2D(13, 13);\nconst hnm = zeroArray2D(13, 13);\nconst sm = Array(13).fill(0);\nconst cm = Array(13).fill(0);\nconst root = Array(13).fill(0);\nconst roots = zeroArray2D(13, 13).map(row => row.map(_ => [0, 0]));\n\nfor (let n = 2; n <= 12; n++) {\n    root[n] = Math.sqrt((2.0 * n - 1) / (2.0 * n));\n}\n\nfor (let m = 0; m <= 12; m++) {\n    const mm = m * m;\n    for (let n = Math.max(m + 1, 2); n <= 12; n++) {\n        roots[m][n][0] = Math.sqrt((n - 1) * (n - 1) - mm);\n        roots[m][n][1] = 1.0 / Math.sqrt(n * n - mm);\n    }\n}\n\nexport const field = (latitude: number, longitude: number, altitude: number = 0): Field => {\n    const cosLat = Math.cos(deg2rad(latitude));\n    const sinLat = Math.sin(deg2rad(latitude));\n    const sr = Math.sqrt(globe.a ** 2 * cosLat ** 2 + globe.b ** 2 * sinLat ** 2);\n    const theta = Math.atan2(cosLat * (altitude * sr + globe.a ** 2), sinLat * (altitude * sr + globe.b ** 2));\n    const r = Math.sqrt(\n        altitude ** 2 +\n        2 * altitude * sr +\n        (globe.a ** 4 - (globe.a ** 4 - globe.b ** 4) * sinLat ** 2) /\n        (globe.a ** 2 - (globe.a ** 2 - globe.b ** 2) * sinLat ** 2));\n    const c = Math.cos(theta);\n    const s = Math.sin(theta);\n    const invS = 1 / (s + (s === 0 ? 1e-8 : 0));\n    P[0][0] = 1;\n    P[1][1] = s;\n    P[1][0] = c;\n    DP[1][0] = -s;\n    DP[1][1] = c;\n\n    for (let n = 2; n <= 12; n++) {\n        P[n][n] = P[n - 1][n - 1] * s * root[n];\n        DP[n][n] = (DP[n - 1][n - 1] * s + P[n - 1][n - 1] * c) * root[n];\n    }\n\n    for (let m = 0; m <= 12; m++) {\n        for (let n = Math.max(m + 1, 2); n <= 12; n++) {\n            P[n][m] = (P[n - 1][m] * c * (2 * n - 1) - P[n - 2][m] * roots[m][n][0]) * roots[m][n][1];\n            DP[n][m] = ((DP[n - 1][m] * c - P[n - 1][m] * s) * (2 * n - 1) - DP[n - 2][m] * roots[m][n][0]) *\n                roots[m][n][1];\n        }\n    }\n\n    const julianYears = julianYearsSince2025();\n    for (let n = 1; n <= 12; n++) {\n        for (let m = 0; m <= 12; m++) {\n            gnm[n][m] = gnmWmm2025[n][m] + julianYears * gtnmWmm2025[n][m];\n            hnm[n][m] = hnmWmm2025[n][m] + julianYears * htnmWmm2025[n][m];\n        }\n    }\n\n    for (let m = 0; m <= 12; m++) {\n        sm[m] = Math.sin(m * deg2rad(longitude));\n        cm[m] = Math.cos(m * deg2rad(longitude));\n    }\n\n    let BR = 0.0;\n    let BTheta = 0.0;\n    let BPhi = 0.0;\n    const fn0 = globe.r0 / r;\n    let fn = fn0 ** 2;\n\n    for (let n = 1; n <= 12; n++) {\n        let c1n = 0;\n        let c2n = 0;\n        let c3n = 0;\n        for (let m = 0; m <= n; m++) {\n            const tmp = gnm[n][m] * cm[m] + hnm[n][m] * sm[m];\n            c1n += tmp * P[n][m];\n            c2n += tmp * DP[n][m];\n            c3n += m * (gnm[n][m] * sm[m] - hnm[n][m] * cm[m]) * P[n][m];\n        }\n        fn *= fn0;\n        BR += (n + 1) * c1n * fn;\n        BTheta -= c2n * fn;\n        BPhi += c3n * fn * invS;\n    }\n\n    const psi = theta - (Math.PI / 2 - deg2rad(latitude));\n    const sinPsi = Math.sin(psi);\n    const cosPsi = Math.cos(psi);\n    const X = -BTheta * cosPsi - BR * sinPsi;\n    const Y = BPhi;\n    const Z = BTheta * sinPsi - BR * cosPsi;\n\n    const declination = X !== 0 || Y !== 0 ? round(rad2deg(Math.atan2(Y, X)), 2) : 0;\n    const inclination = Y !== 0 || (X !== 0 && Z !== 0)\n        ? normalizeInclination(rad2deg(Math.atan2(Z * Math.sin(Math.atan2(Y, X)), Y)))\n        : 0;\n\n    return {\n        declination: round(declination, 2),\n        inclination: round(inclination, 2),\n        intensity: Math.round(Math.sqrt(X ** 2 + Y ** 2 + Z ** 2)),\n        northIntensity: Math.round(X),\n        eastIntensity: Math.round(Y),\n        verticalIntensity: Math.round(Z),\n        horizontalIntensity: Math.round(Math.sqrt(X ** 2 + Y ** 2)),\n    };\n};\n","export const gnmWmm2025 = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-29351.8, -1410.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-2556.6, 2951.1, 1649.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [1361.0, -2404.1, 1243.8, 453.6, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [895.0, 799.5, 55.7, -281.1, 12.1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-233.2, 368.9, 187.2, -138.7, -142.0, 20.9, 0, 0, 0, 0, 0, 0, 0],\n    [64.4, 63.8, 76.9, -115.7, -40.9, 14.9, -60.7, 0, 0, 0, 0, 0, 0],\n    [79.5, -77.0, -8.8, 59.3, 15.8, 2.5, -11.1, 14.2, 0, 0, 0, 0, 0],\n    [23.2, 10.8, -17.5, 2.0, -21.7, 16.9, 15.0, -16.8, 0.9, 0, 0, 0, 0],\n    [4.6, 7.8, 3.0, -0.2, -2.5, -13.1, 2.4, 8.6, -8.7, -12.9, 0, 0, 0],\n    [-1.3, -6.4, 0.2, 2.0, -1.0, -0.6, -0.9, 1.5, 0.9, -2.7, -3.9, 0, 0],\n    [2.9, -1.5, -2.5, 2.4, -0.6, -0.1, -0.6, -0.1, 1.1, -1.0, -0.2, 2.6, 0],\n    [-2.0, -0.2, 0.3, 1.2, -1.3, 0.6, 0.6, 0.5, -0.1, -0.4, -0.2, -1.3, -0.7],\n];\n\nexport const hnmWmm2025 = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 4545.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -3133.6, -815.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -56.6, 237.5, -549.5, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 278.6, -133.9, 212.0, -375.6, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 45.4, 220.2, -122.9, 43.0, 106.1, 0, 0, 0, 0, 0, 0, 0],\n    [0, -18.4, 16.8, 48.8, -59.8, 10.9, 72.7, 0, 0, 0, 0, 0, 0],\n    [0, -48.9, -14.4, -1.0, 23.4, -7.4, -25.1, -2.3, 0, 0, 0, 0, 0],\n    [0, 7.1, -12.6, 11.4, -9.7, 12.7, 0.7, -5.2, 3.9, 0, 0, 0, 0],\n    [0, -24.8, 12.2, 8.3, -3.3, -5.2, 7.2, -0.6, 0.8, 10.0, 0, 0, 0],\n    [0, 3.3, 0.0, 2.4, 5.3, -9.1, 0.4, -4.2, -3.8, 0.9, -9.1, 0, 0],\n    [0, 0, 2.9, -0.6, 0.2, 0.5, -0.3, -1.2, -1.7, -2.9, -1.8, -2.3, 0],\n    [0, -1.3, 0.7, 1.0, -1.4, 0.0, 0.6, -0.1, 0.8, 0.1, -1.0, 0.1, 0.2],\n];\n\nexport const gtnmWmm2025 = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [12.0, 9.7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-11.6, -5.2, -8.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-1.3, -4.2, 0.4, -15.6, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-1.6, -2.4, -6.0, 5.6, -7.0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0.6, 1.4, 0.0, 0.6, 2.2, 0.9, 0, 0, 0, 0, 0, 0, 0],\n    [-0.2, -0.4, 0.9, 1.2, -0.9, 0.3, 0.9, 0, 0, 0, 0, 0, 0],\n    [-0, -0.1, -0.1, 0.5, -0.1, -0.8, -0.8, 0.8, 0, 0, 0, 0, 0],\n    [-0.1, 0.2, 0.0, 0.5, -0.1, 0.3, 0.2, -0, 0.2, 0, 0, 0, 0],\n    [-0, -0.1, 0.1, 0.3, -0.3, 0, 0.3, -0.1, 0.1, -0.1, 0, 0, 0],\n    [0.1, 0.0, 0.1, 0.1, -0, -0.3, 0, -0.1, -0.1, -0, -0, 0, 0],\n    [0, -0, 0, 0, 0, -0.1, 0, -0, -0.1, -0.1, -0.1, -0.1, 0],\n    [0, 0, -0, -0, -0, -0, 0.1, -0, 0, 0, -0.1, -0, -0.1],\n];\n\nexport const htnmWmm2025 = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -21.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -27.7, -12.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 4.0, -0.3, -4.1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -1.1, 4.1, 1.6, -4.4, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -0.5, 2.2, 0.4, 1.7, 1.9, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0.3, -1.6, -0.4, 0.9, 0.7, 0.9, 0, 0, 0, 0, 0, 0],\n    [0, 0.6, 0.5, -0.8, 0.0, -1.0, 0.6, -0.2, 0, 0, 0, 0, 0],\n    [0, -0.2, 0.5, -0.4, 0.4, -0.5, -0.6, 0.3, 0.2, 0, 0, 0, 0],\n    [0, -0.3, 0.3, -0.3, 0.3, 0.2, -0.1, -0.2, 0.4, 0.1, 0, 0, 0],\n    [0, 0, -0, -0.2, 0.1, -0.1, 0.1, 0.0, -0.1, 0.2, -0, 0, 0],\n    [0, -0, 0.1, -0, 0.1, -0, -0, 0.1, -0, 0, 0, 0, 0],\n    [0, -0, 0, -0.1, 0.1, -0, -0, -0, 0, -0, -0, 0, -0.1],\n];\n\nexport const globe = {\n    a: 6378.137,\n    b: 6356.7523142,\n    r0: 6371.2,\n};\n","export const zeroArray2D = (rows: number, columns: number): Array<Array<number>> =>\n    Array(rows).fill('').map(_ => Array(columns).fill(0));\n\nexport const julianYearsSince2025 = () =>\n    ((new Date(Date.now())).valueOf() / 86400000 + 2440587.5 - 2460677) / 365.25;\n\nexport const round = (num: number, decimalPlaces: number): number =>\n    Number(`${Math.round(Number(`${num}e+${decimalPlaces}`))}e-${decimalPlaces}`);\n\nexport const normalizeInclination = (inclination: number): number => {\n    if (inclination > 90) {\n        return inclination - 180;\n    } else if (inclination < -90) {\n        return inclination + 180;\n    }\n    return inclination;\n};\n\nexport const deg2rad = (deg: number): number => deg * 0.017453292519943295;\nexport const rad2deg = (rad: number): number => rad * 57.29577951308232;\n"],"names":["gnmWmm2025","hnmWmm2025","gtnmWmm2025","htnmWmm2025","globe","zeroArray2D","rows","columns","Array","fill","map","_","round","num","decimalPlaces","Number","Math","deg2rad","deg","rad2deg","rad","P","DP","gnm","hnm","sm","cm","root","roots","row","n","sqrt","m","mm","max","field","latitude","longitude","altitude","cosLat","cos","sinLat","sin","sr","theta","atan2","r","c","s","invS","julianYears","Date","now","valueOf","BR","BTheta","BPhi","fn0","fn","c1n","c2n","c3n","tmp","psi","PI","sinPsi","cosPsi","X","Y","Z","declination","inclination","normalizeInclination","intensity","northIntensity","eastIntensity","verticalIntensity","horizontalIntensity"],"mappings":"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"}