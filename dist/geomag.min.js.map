{"version":3,"file":"geomag.min.js","sources":["../src/geomag.ts","../src/constants.ts","../src/util.ts"],"sourcesContent":["import { globe, gnmWmm2020, gtnmWmm2020, hnmWmm2020, htnmWmm2020 } from './constants';\nimport { Field } from './types';\nimport { deg2rad, julianYearsSince2020, normalizeInclination, rad2deg, round, zeroArray2D } from './util';\n\nconst P = zeroArray2D(13, 13);\nconst DP = zeroArray2D(13, 13);\nconst gnm = zeroArray2D(13, 13);\nconst hnm = zeroArray2D(13, 13);\nconst sm = Array(13).fill(0);\nconst cm = Array(13).fill(0);\nconst root = Array(13).fill(0);\nconst roots = zeroArray2D(13, 13).map(row => row.map(_ => [0, 0]));\n\nfor (let n = 2; n <= 12; n++) {\n    root[n] = Math.sqrt((2.0 * n - 1) / (2.0 * n));\n}\n\nfor (let m = 0; m <= 12; m++) {\n    const mm = m * m;\n    for (let n = Math.max(m + 1, 2); n <= 12; n++) {\n        roots[m][n][0] = Math.sqrt((n - 1) * (n - 1) - mm);\n        roots[m][n][1] = 1.0 / Math.sqrt(n * n - mm);\n    }\n}\n\nexport const field = (latitude: number, longitude: number, altitude: number = 0): Field => {\n    const cosLat = Math.cos(deg2rad(latitude));\n    const sinLat = Math.sin(deg2rad(latitude));\n    const sr = Math.sqrt(globe.a ** 2 * cosLat ** 2 + globe.b ** 2 * sinLat ** 2);\n    const theta = Math.atan2(cosLat * (altitude * sr + globe.a ** 2), sinLat * (altitude * sr + globe.b ** 2));\n    const r = Math.sqrt(\n        altitude ** 2 +\n        2 * altitude * sr +\n        (globe.a ** 4 - (globe.a ** 4 - globe.b ** 4) * sinLat ** 2) /\n        (globe.a ** 2 - (globe.a ** 2 - globe.b ** 2) * sinLat ** 2));\n    const c = Math.cos(theta);\n    const s = Math.sin(theta);\n    const invS = 1 / (s + (s === 0 ? 1e-8 : 0));\n    P[0][0] = 1;\n    P[1][1] = s;\n    P[1][0] = c;\n    DP[1][0] = -s;\n    DP[1][1] = c;\n\n    for (let n = 2; n <= 12; n++) {\n        P[n][n] = P[n - 1][n - 1] * s * root[n];\n        DP[n][n] = (DP[n - 1][n - 1] * s + P[n - 1][n - 1] * c) * root[n];\n    }\n\n    for (let m = 0; m <= 12; m++) {\n        for (let n = Math.max(m + 1, 2); n <= 12; n++) {\n            P[n][m] = (P[n - 1][m] * c * (2 * n - 1) - P[n - 2][m] * roots[m][n][0]) * roots[m][n][1];\n            DP[n][m] = ((DP[n - 1][m] * c - P[n - 1][m] * s) * (2 * n - 1) - DP[n - 2][m] * roots[m][n][0]) *\n                roots[m][n][1];\n        }\n    }\n\n    const julianYears = julianYearsSince2020();\n    for (let n = 1; n <= 12; n++) {\n        for (let m = 0; m <= 12; m++) {\n            gnm[n][m] = gnmWmm2020[n][m] + julianYears * gtnmWmm2020[n][m];\n            hnm[n][m] = hnmWmm2020[n][m] + julianYears * htnmWmm2020[n][m];\n        }\n    }\n\n    for (let m = 0; m <= 12; m++) {\n        sm[m] = Math.sin(m * deg2rad(longitude));\n        cm[m] = Math.cos(m * deg2rad(longitude));\n    }\n\n    let BR = 0.0;\n    let BTheta = 0.0;\n    let BPhi = 0.0;\n    const fn0 = globe.r0 / r;\n    let fn = fn0 ** 2;\n\n    for (let n = 1; n <= 12; n++) {\n        let c1n = 0;\n        let c2n = 0;\n        let c3n = 0;\n        for (let m = 0; m <= n; m++) {\n            const tmp = gnm[n][m] * cm[m] + hnm[n][m] * sm[m];\n            c1n += tmp * P[n][m];\n            c2n += tmp * DP[n][m];\n            c3n += m * (gnm[n][m] * sm[m] - hnm[n][m] * cm[m]) * P[n][m];\n        }\n        fn *= fn0;\n        BR += (n + 1) * c1n * fn;\n        BTheta -= c2n * fn;\n        BPhi += c3n * fn * invS;\n    }\n\n    const psi = theta - (Math.PI / 2 - deg2rad(latitude));\n    const sinPsi = Math.sin(psi);\n    const cosPsi = Math.cos(psi);\n    const X = -BTheta * cosPsi - BR * sinPsi;\n    const Y = BPhi;\n    const Z = BTheta * sinPsi - BR * cosPsi;\n\n    const declination = X !== 0 || Y !== 0 ? round(rad2deg(Math.atan2(Y, X)), 2) : 0;\n    const inclination = Y !== 0 || (X !== 0 && Z !== 0)\n        ? normalizeInclination(rad2deg(Math.atan2(Z * Math.sin(Math.atan2(Y, X)), Y)))\n        : 0;\n\n    return {\n        declination: round(declination, 2),\n        inclination: round(inclination, 2),\n        intensity: Math.round(Math.sqrt(X ** 2 + Y ** 2 + Z ** 2)),\n        northIntensity: Math.round(X),\n        eastIntensity: Math.round(Y),\n        verticalIntensity: Math.round(Z),\n        horizontalIntensity: Math.round(Math.sqrt(X ** 2 + Y ** 2)),\n    };\n};\n","export const gnmWmm2020 = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-29404.5, -1450.7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-2500, 2982, 1676.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [1363.9, -2381, 1236.2, 525.7, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [903.1, 809.4, 86.2, -309.4, 47.9, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-234.4, 363.1, 187.8, -140.7, -151.2, 13.7, 0, 0, 0, 0, 0, 0, 0],\n    [65.9, 65.6, 73, -121.5, -36.2, 13.5, -64.7, 0, 0, 0, 0, 0, 0],\n    [80.6, -76.8, -8.3, 56.5, 15.8, 6.4, -7.2, 9.8, 0, 0, 0, 0, 0],\n    [23.6, 9.8, -17.5, -0.4, -21.1, 15.3, 13.7, -16.5, -0.3, 0, 0, 0, 0],\n    [5, 8.2, 2.9, -1.4, -1.1, -13.3, 1.1, 8.9, -9.3, -11.9, 0, 0, 0],\n    [-1.9, -6.2, -0.1, 1.7, -0.9, 0.6, -0.9, 1.9, 1.4, -2.4, -3.9, 0, 0],\n    [3, -1.4, -2.5, 2.4, -0.9, 0.3, -0.7, -0.1, 1.4, -0.6, 0.2, 3.1, 0],\n    [-2, -0.1, 0.5, 1.3, -1.2, 0.7, 0.3, 0.5, -0.2, -0.5, 0.1, -1.1, -0.3],\n];\n\nexport const hnmWmm2020 = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 4652.9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -2991.6, -734.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -82.2, 241.8, -542.9, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 282, -158.4, 199.8, -350.1, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 47.7, 208.4, -121.3, 32.2, 99.1, 0, 0, 0, 0, 0, 0, 0],\n    [0, -19.1, 25, 52.7, -64.4, 9, 68.1, 0, 0, 0, 0, 0, 0],\n    [0, -51.4, -16.8, 2.3, 23.5, -2.2, -27.2, -1.9, 0, 0, 0, 0, 0],\n    [0, 8.4, -15.3, 12.8, -11.8, 14.9, 3.6, -6.9, 2.8, 0, 0, 0, 0],\n    [0, -23.3, 11.1, 9.8, -5.1, -6.2, 7.8, 0.4, -1.5, 9.7, 0, 0, 0],\n    [0, 3.4, -0.2, 3.5, 4.8, -8.6, -0.1, -4.2, -3.4, -0.1, -8.8, 0, 0],\n    [0, 0, 2.6, -0.5, -0.4, 0.6, -0.2, -1.7, -1.6, -3, -2, -2.6, 0],\n    [0, -1.2, 0.5, 1.3, -1.8, 0.1, 0.7, -0.1, 0.6, 0.2, -0.9, 0, 0.5],\n];\n\nexport const gtnmWmm2020 = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [6.7, 7.7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-11.5, -7.1, -2.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [2.8, -6.2, 3.4, -12.2, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-1.1, -1.6, -6, 5.4, -5.5, 0, 0, 0, 0, 0, 0, 0, 0],\n    [-0.3, 0.6, -0.7, 0.1, 1.2, 1, 0, 0, 0, 0, 0, 0, 0],\n    [-0.6, -0.4, 0.5, 1.4, -1.4, 0, 0.8, 0, 0, 0, 0, 0, 0],\n    [-0.1, -0.3, -0.1, 0.7, 0.2, -0.5, -0.8, 1, 0, 0, 0, 0, 0],\n    [-0.1, 0.1, -0.1, 0.5, -0.1, 0.4, 0.5, 0, 0.4, 0, 0, 0, 0],\n    [-0.1, -0.2, 0, 0.4, -0.3, 0, 0.3, 0, 0, -0.4, 0, 0, 0],\n    [0, 0, 0, 0.2, -0.1, -0.2, 0, -0.1, -0.2, -0.1, 0, 0, 0],\n    [0, -0.1, 0, 0, 0, -0.1, 0, 0, -0.1, -0.1, -0.1, -0.1, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.1],\n];\n\nexport const htnmWmm2020 = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -25.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -30.2, -23.9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 5.7, -1, 1.1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0.2, 6.9, 3.7, -5.6, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0.1, 2.5, -0.9, 3, 0.5, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0.1, -1.8, -1.4, 0.9, 0.1, 1, 0, 0, 0, 0, 0, 0],\n    [0, 0.5, 0.6, -0.7, -0.2, -1.2, 0.2, 0.3, 0, 0, 0, 0, 0],\n    [0, -0.3, 0.7, -0.2, 0.5, -0.3, -0.5, 0.4, 0.1, 0, 0, 0, 0],\n    [0, -0.3, 0.2, -0.4, 0.4, 0.1, 0, -0.2, 0.5, 0.2, 0, 0, 0],\n    [0, 0, 0.1, -0.3, 0.1, -0.2, 0.1, 0, -0.1, 0.2, 0, 0, 0],\n    [0, 0, 0.1, 0, 0.2, 0, 0, 0.1, 0, -0.1, 0, 0, 0],\n    [0, 0, 0, -0.1, 0.1, 0, 0, 0, 0.1, 0, 0, 0, -0.1],\n];\n\nexport const globe = {\n    a: 6378.137,\n    b: 6356.7523142,\n    r0: 6371.2,\n};\n","export const zeroArray2D = (rows: number, columns: number): Array<Array<number>> =>\n    Array(rows).fill('').map(_ => Array(columns).fill(0));\n\nexport const julianYearsSince2020 = () =>\n    ((new Date(Date.now())).valueOf() / 86400000 + 2440587.5 - 2458850) / 365.25;\n\nexport const round = (num: number, decimalPlaces: number): number =>\n    Number(`${Math.round(Number(`${num}e+${decimalPlaces}`))}e-${decimalPlaces}`);\n\nexport const normalizeInclination = (inclination: number): number => {\n    if (inclination > 90) {\n        return inclination - 180;\n    } else if (inclination < -90) {\n        return inclination + 180;\n    }\n    return inclination;\n};\n\nexport const deg2rad = (deg: number): number => deg * 0.017453292519943295;\nexport const rad2deg = (rad: number): number => rad * 57.29577951308232;\n"],"names":["gnmWmm2020","hnmWmm2020","gtnmWmm2020","htnmWmm2020","globe","zeroArray2D","rows","columns","Array","fill","map","_","round","num","decimalPlaces","Number","Math","deg2rad","deg","rad2deg","rad","P","DP","gnm","hnm","sm","cm","root","roots","row","n","sqrt","m","mm","max","latitude","longitude","altitude","cosLat","cos","sinLat","sin","sr","theta","atan2","r","c","s","invS","julianYears","Date","now","valueOf","BR","BTheta","BPhi","fn0","fn","c1n","c2n","c3n","tmp","psi","PI","sinPsi","cosPsi","X","Y","Z","declination","inclination","normalizeInclination","intensity","northIntensity","eastIntensity","verticalIntensity","horizontalIntensity"],"mappings":"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"}